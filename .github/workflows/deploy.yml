name: Test, Deploy and Notify

on:
  push:
    branches: [main]

jobs:
  notify-start:
    runs-on: ubuntu-latest
    steps:
      - name: Notify workflow start
        uses: slackapi/slack-github-action@v2.1.1
        with:
          payload: |
            {
              "text": "üöÄ Pipeline f√ºr ${{ github.repository }} wurde gestartet (Commit: ${{ github.sha }})"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd test
          npm install

      - name: Run tests with coverage
        run: |
          cd test
          npm test

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: test/coverage/

      - name: Notify test success
        if: success()
        uses: slackapi/slack-github-action@v2.1.1
        with:
          payload: |
            {
              "text": "‚úÖ Tests erfolgreich f√ºr ${{ github.repository }} (Commit: ${{ github.sha }})"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify test failure
        if: failure()
        uses: slackapi/slack-github-action@v2.1.1
        with:
          payload: |
            {
              "text": "‚ùå Tests fehlgeschlagen f√ºr ${{ github.repository }} (Commit: ${{ github.sha }})"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps:
      - name: Notify deploy start
        uses: slackapi/slack-github-action@v2.1.1
        with:
          payload: |
            {
              "text": "üì¶ Starte Deployment f√ºr ${{ github.repository }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/private_key.pem
          chmod 600 ~/.ssh/private_key.pem
          ssh-keyscan ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

      - name: Copy file to EC2
        run: |
          scp -i ~/.ssh/private_key.pem -o StrictHostKeyChecking=no test/mehrwertsteuer.js ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/

      - name: Notify deploy success
        uses: slackapi/slack-github-action@v2.1.1
        with:
          payload: |
            {
              "text": "‚úÖ Deployment erfolgreich f√ºr ${{ github.repository }} (Commit: ${{ github.sha }})"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  notify-final:
    runs-on: ubuntu-latest
    needs: [test, deploy]
    if: always()
    steps:
      - name: Notify final status
        uses: slackapi/slack-github-action@v2.1.1
        with:
          payload: |
            {
              "text": "üèÅ Pipeline f√ºr ${{ github.repository }} abgeschlossen mit Status: ${{ job.status }} (Commit: ${{ github.sha }})"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
